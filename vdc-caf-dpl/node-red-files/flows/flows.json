[{"id":"f28a5522.4c17e8","type":"tab","label":"CAF","disabled":false,"info":"Entry point for the CAF"},{"id":"f7a59242.2dce6","type":"tab","label":"GetStreamingData","disabled":false,"info":"Returns the streaming data for the parameters given."},{"id":"99717d9f.a9379","type":"tab","label":"GetSimplifiedDiagnostic","disabled":false,"info":""},{"id":"de181d5c.272e8","type":"tab","label":"GetFullDiagnostic","disabled":false,"info":""},{"id":"290d8e6c.070432","type":"influxdb","z":"","hostname":"172.16.33.202","port":"8086","protocol":"http","database":"defaultdb","name":"Influx en cap. 16 - 172.16.33.202","usetls":false,"tls":""},{"id":"965b2e2d.2e882","type":"grpc-server","z":"","port":"40001","name":"streaming-dal","server":"172.16.33.89","protoFile":"syntax = \"proto3\";\n\npackage IdekoStreamingDal;\n\n// SavvyStreamingAPI service definition\nservice SavvyStreamingAPI {\n  // Opens a stream request with the parameters specified and returns a stream response\n  rpc StreamMachine (StreamParameters) returns (stream StreamResponse) {}\n}\n\n// The request parameters\nmessage StreamParameters {\n  string machineId = 1;\n  string authorization = 2;\n}\n\n// The response message containing the json line\nmessage StreamResponse {\n  string responseLine = 1;\n}","localServer":false},{"id":"1bfbff3b.1f0d21","type":"http response","z":"f7a59242.2dce6","name":"http","statusCode":"","streamResponse":"1","headers":{"Transfer-Encoding":"chunked","Content-type":"text/json; charset=UTF-8","Content-Length":"8"},"x":990,"y":220,"wires":[]},{"id":"78d0e09b.030d4","type":"function","z":"f7a59242.2dce6","name":"stopping?","func":"// Sens s STOP signal to the Savy node if the \n// HTTP In node indicates that the connection\n// was closed\n// Esto e sun tema que añadí o para avisar de conexiones cerradas pero\n// ahora que no uso el nodo de savvy me fastidia. Porque debería usarlo\n// para parar la llamada gRPC pero el nodo no parece tener esa feature.\n// Así que me fastidia, pero lo controlo y punto. Porque si se manda, es\n// como otro input más para el nodo y se re-ejecuta todo.\nif (msg.connectionClosed !== true)\n{\n    return msg;\n}\n// Si la propiedad connectionClosed no es \n// True no se manda nada por lo que el flujo no llega \n// al siguiente mensage","outputs":1,"noerr":0,"x":260,"y":220,"wires":[["ff0aeba5.69c378"]]},{"id":"eac32e84.29f42","type":"http in","z":"f28a5522.4c17e8","name":"CAF","url":"/caf/:exposed_method","method":"get","upload":false,"swaggerDoc":"","x":130,"y":240,"wires":[["623cc681.4066e8","5570d15e.d2cf","a3b9eba9.ed67c8"]]},{"id":"10a79d06.578cb3","type":"link in","z":"f7a59242.2dce6","name":"GetStreamingData","links":["760668e9.22bad8"],"x":155,"y":220,"wires":[["78d0e09b.030d4"]]},{"id":"5570d15e.d2cf","type":"switch","z":"f28a5522.4c17e8","name":"method","property":"req.params.exposed_method","propertyType":"msg","rules":[{"t":"eq","v":"GetSimplifiedDiagnostic","vt":"str"},{"t":"eq","v":"GetFullDiagnostic","vt":"str"},{"t":"eq","v":"GetStreamingData","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":4,"x":360,"y":240,"wires":[["e1607336.e8697"],["573ad826.843228"],["760668e9.22bad8"],["4b56a8d5.88ba88"]]},{"id":"573ad826.843228","type":"link out","z":"f28a5522.4c17e8","name":"GetFullDiagnostic","links":["3edf5efb.56e232"],"x":555,"y":240,"wires":[]},{"id":"760668e9.22bad8","type":"link out","z":"f28a5522.4c17e8","name":"GetStreamingData","links":["10a79d06.578cb3"],"x":555,"y":280,"wires":[]},{"id":"4b56a8d5.88ba88","type":"function","z":"f28a5522.4c17e8","name":"method not exists","func":"msg.payload = \"The exposed doesn't exist: \" + msg.req.params.exposed_method;\nreturn msg;","outputs":1,"noerr":0,"x":590,"y":360,"wires":[["31520218.d4672e"]]},{"id":"31520218.d4672e","type":"http response","z":"f28a5522.4c17e8","name":"response","statusCode":"501","headers":{},"x":780,"y":360,"wires":[]},{"id":"e1607336.e8697","type":"link out","z":"f28a5522.4c17e8","name":"GetSimplifiedDiagnostic","links":["a2f5ece5.ecf5e"],"x":555,"y":200,"wires":[]},{"id":"a2f5ece5.ecf5e","type":"link in","z":"99717d9f.a9379","name":"GetSimplifiedDiagnostic","links":["e1607336.e8697"],"x":255,"y":180,"wires":[["427d1dfd.4e2984"]]},{"id":"3edf5efb.56e232","type":"link in","z":"de181d5c.272e8","name":"GetFullDiagnostic","links":["573ad826.843228"],"x":295,"y":160,"wires":[["60109b8b.dbfea4"]]},{"id":"5bc6c390.7cb84c","type":"http response","z":"99717d9f.a9379","name":"response","statusCode":"","headers":{},"x":620,"y":180,"wires":[]},{"id":"e7f3d305.ed06","type":"http response","z":"de181d5c.272e8","name":"response","statusCode":"","headers":{},"x":660,"y":160,"wires":[]},{"id":"427d1dfd.4e2984","type":"function","z":"99717d9f.a9379","name":"fake-resp","func":"// TEMP repsonse\nvar statuses = [\"OK\", \"ALERT\", \"WARNING\"];\nvar randomInt = parseInt(Math.random() * (3 - 0) + 0);\n\n\nvar response = {\n    status: statuses[randomInt],\n    timestamp: + new Date(),\n    cause: {\n        raw: \"Metric over expected value\",\n        metric: \"Z1AxisEngineIntensity\",\n        value: 232,\n        unit: \"amp\"\n    }\n}\n\n//msg.payload = \"501 - Not implemented yet\"\nmsg.payload = response;\nreturn msg;","outputs":1,"noerr":0,"x":420,"y":180,"wires":[["5bc6c390.7cb84c"]]},{"id":"60109b8b.dbfea4","type":"function","z":"de181d5c.272e8","name":"fake-resp","func":"// TEMP repsonse\nvar statuses = [\"OK\", \"ALERT\", \"WARNING\"];\nvar randomInt = parseInt(Math.random() * (3 - 0) + 0);\n\nvar now = +new Date();\nvar threeHoursAgo = now - 60 * 60 * 1000 * 3; // millis\n\nfunction getFakeSignal ()\n{\n    var signal = [];\n    // 10800 - 3 horas\n    for (var i=0; i<10800; i++)\n    {\n        var valueArray = [\n            threeHoursAgo - (10800 * 1000) + (i * 1000),\n            Math.random() * (96 - 0) + 0\n        ]\n        signal.push(valueArray);\n    }\n    return signal;\n}\n\nvar response = {\n    status: statuses[randomInt],\n    timestamp: + new Date(),\n    cause: {\n        raw: \"Metric over expected value\",\n        metric: \"Z1AxixEngineIntensity\",\n        value: 232,\n        unit: \"amp\"\n    },\n    signals: {\n        \"Z1AxisEngineIntensity\": getFakeSignal(),\n        \"Z2AxisEngineIntensity\": getFakeSignal(),\n        \"Z1AxisTemperature\": getFakeSignal(),\n        \"Z2AxisTemperature\": getFakeSignal()\n    }\n}\n\nmsg.payload = \"501 - Not implemented yet\"\nmsg.payload = response;\nreturn msg;","outputs":1,"noerr":0,"x":460,"y":160,"wires":[["e7f3d305.ed06"]]},{"id":"623cc681.4066e8","type":"debug","z":"f28a5522.4c17e8","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":430,"y":160,"wires":[]},{"id":"f17e13e6.b321b","type":"comment","z":"f28a5522.4c17e8","name":"COMPUTATION BLUEPRINT CAF - A single blueprint for all the machines","info":"- Si me pasan varias máquinas tengo que hacer todo en paralelo porque las funetes de datos (InfluxDB) de cada máquina está en un sitio diferente\n- OK Podemos usar la BD local puesto que el DAL es quién media.","x":340,"y":60,"wires":[]},{"id":"af76fe78.b94e","type":"comment","z":"f7a59242.2dce6","name":"COMPUTATION BLUEPRINT CAF - A single blueprint for all the machines","info":"- [KO] Si me pasan varias máquinas tengo que hacer todo en paralelo porque las funetes de datos (InfluxDB) de cada máquina está en un sitio diferente\n- No puedo dejar varias máquina porque el nodo de gRPC no pemite que se ejecuten varias request en paralelo. \n- OK Podemos usar la BD local puesto que el DAL es quién media.","x":400,"y":60,"wires":[]},{"id":"7f539c43.376a44","type":"comment","z":"99717d9f.a9379","name":"COMPUTATION BLUEPRINT CAF - A single blueprint for all the machines","info":"- Si me pasan varias máquinas tengo que hacer todo en paralelo porque las funetes de datos (InfluxDB) de cada máquina está en un sitio diferente\n- OK Podemos usar la BD local puesto que el DAL es quién media.","x":340,"y":40,"wires":[]},{"id":"c665882c.ba9ea8","type":"comment","z":"de181d5c.272e8","name":"COMPUTATION BLUEPRINT CAF - A single blueprint for all the machines","info":"- Si me pasan varias máquinas tengo que hacer todo en paralelo porque las funetes de datos (InfluxDB) de cada máquina está en un sitio diferente\n- OK Podemos usar la BD local puesto que el DAL es quién media.","x":340,"y":40,"wires":[]},{"id":"f64e9156.7c014","type":"catch","z":"f7a59242.2dce6","name":"","scope":["6e32b08.cb8f15"],"uncaught":false,"x":290,"y":400,"wires":[["57b508eb.0e9218","813fd1bc.7560e"]]},{"id":"813fd1bc.7560e","type":"function","z":"f7a59242.2dce6","name":"set-err","func":"msg.statusCode = 403\nmsg.streamResponse = false\n\n// To fit Savvy's error message structure...\nresponse = {\n  \"status\": 403,\n  \"code\": 0,\n  \"message\": msg.error.message,\n  \"link\": \"string\",\n  \"developerMessage\": \"string\"\n}\n\nmsg.payload = JSON.stringify(response)\nreturn msg;","outputs":1,"noerr":0,"x":490,"y":400,"wires":[["57b508eb.0e9218"]]},{"id":"a3b9eba9.ed67c8","type":"function","z":"f28a5522.4c17e8","name":"log","func":"node.log('Llamada a ' + msg.req.params.exposed_method);\n\nreturn msg;","outputs":1,"noerr":0,"x":250,"y":320,"wires":[[]]},{"id":"57b508eb.0e9218","type":"debug","z":"f7a59242.2dce6","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":490,"y":340,"wires":[]},{"id":"6e32b08.cb8f15","type":"grpc-call","z":"f7a59242.2dce6","name":"","server":"965b2e2d.2e882","service":"","method":"","x":630,"y":220,"wires":[["4a6a6567.bd47ac","deb03ed7.c3252"]]},{"id":"ff0aeba5.69c378","type":"function","z":"f7a59242.2dce6","name":"parse-machines","func":"// Example call: \n// ip:1888/caf/GetStreamingData?machine=CMX_LQLS26\n\nvar machines = msg.req.query.machine.split(',');\n\nnode.log(\"Received a request for \" + machines.length + \" machines\");\n\n// Send a gRPC request for each machine\nfor (var i=0; i < machines.length; i++)\n{\n    // Can't destry real msg because http request needs it\n    msg.service = \"SavvyStreamingAPI\"\n    msg.method = \"StreamMachine\"\n    msg.payload = {\n      \"machineId\": machines[i],\n      \"authorization\": msg.req.headers[\"authorization\"]\n    }\n    node.log(\"Sending gRPC request for \" + machines[i]);\n    // This mthiod now only respons to a singel machine.\n    // Instead of removing all this logic in the unlikely\n    // event the gRPC nodes support multi-execution in \n    // the future\n    return msg;\n    //node.send(msg);\n}\n","outputs":1,"noerr":0,"x":440,"y":220,"wires":[["6e32b08.cb8f15"]]},{"id":"4a6a6567.bd47ac","type":"debug","z":"f7a59242.2dce6","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":850,"y":360,"wires":[]},{"id":"deb03ed7.c3252","type":"function","z":"f7a59242.2dce6","name":"payload + bl","func":"msg.payload = msg.payload.responseLine + \"\\r\\n\"\nreturn msg","outputs":1,"noerr":0,"x":810,"y":220,"wires":[["1bfbff3b.1f0d21"]]},{"id":"d4f8ec9e.45a5c","type":"inject","z":"f7a59242.2dce6","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":220,"y":140,"wires":[["71f9e64b.1432b8"]]},{"id":"71f9e64b.1432b8","type":"function","z":"f7a59242.2dce6","name":"force-call","func":"// Example call: \n// ip:1888/caf/GetStreamingData?machine=CMX_LQLS26\n\nnode.log(\"Forcing call for CMX_LQLS26\");\nmsg.service = \"SavvyStreamingAPI\"\nmsg.method = \"StreamMachine\"\nmsg.payload = {\n  \"machineId\": \"CMX_LQLS26\"\n}\nnode.log(\"Sending call request to grpc node\");\n\nreturn msg;","outputs":1,"noerr":0,"x":380,"y":140,"wires":[[]]}]

{
	"INTERNAL_STRUCTURE": {
		"Overview": {
			"name": "Computation blueprints for SPART MANUFACTURING plant",
			"description": "Computations blueprints able to get data from the 3 ESTARTA 315 FV machines working on the SPART MANUFATURING plant. Expose 3 methods.",
			"tags": [
				{
					"method_id": "GetStreamingData",
					"tags": ["machine", "data", "json", "stream", "streaming"]
				},
				{
					"method_id": "GetSimplifiedDiagnostic",
					"tags": ["machine", "diagnostic", "anomaly detection"]
				},
				{
					"method_id": "GetFullDiagnostic",
					"tags": ["machine", "diagnostic", "anomaly detection"]
				}
			]
		},
		"Data_Sources": [{
				"id": "MachineTimeseriesDatabase - Kelly",
				"description": "Machine timeseries database (InfluxDB) for Kelly (HW11)",
				"location": "edge",
				"class": "time-series database",
				"type": "InfluxDB",
				"parameters": {
					"ip": "172.16.33.125",
					"port": "8086",
					"user": "defaultdbuser ",
					"password": "****",
					"database": "defaultdb"
				},
				"schema": {
					"TO-DO": "[Borja - To define the schema of the database. Check Javi Escartin's CSV data examples to devise the future influxDB structure]"
				}
			},
			{
				"id": "MachineTimeseriesDatabase - Slater",
				"description": "Machine timeseries database (InfluxDB) for Slater (HW15)",
				"location": "edge",
				"class": "time-series database",
				"type": "InfluxDB",
				"parameters": {
					"ip": "172.16.32.215",
					"port": "8086",
					"user": "defaultdbuser ",
					"password": "****",
					"database": "defaultdb"
				},
				"schema": {
					"TO-DO": "[Borja - To define the schema of the database. Check Javi Escaqrtin's CSV data examples to devise the future influxDB structure]"
				}
			},
			{
				"id": "MachineTimeseriesDatabase - Zack",
				"description": "Machine timeseries database (InfluxDB) for Zack (HW16)",
				"location": "edge",
				"class": "time-series database",
				"type": "InfluxDB",
				"parameters": {
					"ip": "172.16.33.202",
					"port": "8086",
					"user": "defaultdbuser ",
					"password": "****",
					"database": "defaultdb"
				},
				"schema": {
					"TO-DO": "[Borja - To define the schema of the database. Check Javi Escaqrtin's CSV data examples to devise the future influxDB structure]"
				}
			},
			{
				"id": "InboxStreamingAPI - Kelly",
				"description": "In-box streaming API for Kelly served directly from the interoperability module on the smart box (HW11)",
				"location": "edge",
				"class": "data stream",
				"type": "rest",
				"parameters": {
					"url": "http://172.16.33.125:7888/stream?machines=XXC_MBXSLL"
				}
			},
			{
				"id": "InboxStreamingAPI - Slater",
				"description": "In-box streaming API for Slater served directly from the interoperability module on the smart box (HW15)",
				"location": "edge",
				"class": "data stream",
				"type": "rest",
				"parameters": {
					"url": "http://172.16.32.215:7888/stream?machines=CMS_LJ3Z4P"
				}
			},
			{
				"id": "InboxStreamingAPI - Zack",
				"description": "In-box streaming API for Zack served directly from the interoperability module on the smart box (HW16)",
				"location": "edge",
				"class": "data stream",
				"type": "rest",
				"parameters": {
					"url": "http://172.16.33.202:7888/stream?machines=CMX_LQLS26"
				}
			}
		],
		"Methods_Input": {
			"Methods": [
				{
					"method_id": "GetStreamingData",
					"data_sources": [
						{
							"dataSource_id": "InboxStreamingAPI - Kelly",
							"tables": [
							]
						},
						{
							"dataSource_id": "InboxStreamingAPI - Slater",
							"tables": [
							]
						},
						{
							"dataSource_id": "InboxStreamingAPI - Zack",
							"tables": [
							]
						}
					]
				},
				{
					"method_id": "GetSimplifiedDiagnostic",
					"dataSources": [
						{
							"dataSource_id": "MachineTimeseriesDatabase - Kelly",
							"tables": [
								{
									"table_id": "I_XXC_MBXSLL_AW8HY7",
									"columns": ["time", "value"]
								},
								{
									"table_id": "I_XXC_MBXSLL_FS38ZU",
									"columns": ["time", "value"]
								},								
								{
									"table_id": "I_XXC_MBXSLL_UKZVHZ",
									"columns": ["time", "value"]
								},								
								{
									"table_id": "I_XXC_MBXSLL_66SZ4X",
									"columns": ["time", "value"]
								},
								{
									"table_id": "I_XXC_MBXSLL_V3TRK1",
									"columns": ["time", "value"]
								},
								{
									"table_id": "I_XXC_MBXSLL_ARKS8V",
									"columns": ["time", "value"]
								},
								{
									"table_id": "I_XXC_MBXSLL_68SBRS",
									"columns": ["time", "value"]
								}
							]
						},
						{
							"dataSource_id": "MachineTimeseriesDatabase - Slater",
							"tables": [
								{
									"table_id": "I_CMS_LJ3Z4P_AW8HY7",
									"columns": ["time", "value"]
								},
								{
									"table_id": "I_CMS_LJ3Z4P_FS38ZU",
									"columns": ["time", "value"]
								},								
								{
									"table_id": "I_CMS_LJ3Z4P_UKZVHZ",
									"columns": ["time", "value"]
								},								
								{
									"table_id": "I_CMS_LJ3Z4P_66SZ4X",
									"columns": ["time", "value"]
								},
								{
									"table_id": "I_CMS_LJ3Z4P_V3TRK1",
									"columns": ["time", "value"]
								},
								{
									"table_id": "I_CMS_LJ3Z4P_ARKS8V",
									"columns": ["time", "value"]
								},
								{
									"table_id": "I_CMS_LJ3Z4P_68SBRS",
									"columns": ["time", "value"]
								}
							]
						},
						{
							"dataSource_id": "MachineTimeseriesDatabase - Zack",
							"tables": [
								{
									"table_id": "I_CMX_LQLS26_AW8HY7",
									"columns": ["time", "value"]
								},
								{
									"table_id": "I_CMX_LQLS26_FS38ZU",
									"columns": ["time", "value"]
								},								
								{
									"table_id": "I_CMX_LQLS26_UKZVHZ",
									"columns": ["time", "value"]
								},								
								{
									"table_id": "I_CMX_LQLS26_66SZ4X",
									"columns": ["time", "value"]
								},
								{
									"table_id": "I_CMX_LQLS26_V3TRK1",
									"columns": ["time", "value"]
								},
								{
									"table_id": "I_CMX_LQLS26_ARKS8V",
									"columns": ["time", "value"]
								},
								{
									"table_id": "I_CMX_LQLS26_68SBRS",
									"columns": ["time", "value"]
								}
							]
						}
					]
				},
				{
					"method_id": "GetFullDiagnostic",
					"dataSources": [
						{
							"dataSource_id": "MachineTimeseriesDatabase - Kelly",
							"tables": [
								{
									"table_id": "I_XXC_MBXSLL_AW8HY7",
									"columns": ["time", "value"]
								},
								{
									"table_id": "I_XXC_MBXSLL_FS38ZU",
									"columns": ["time", "value"]
								},								
								{
									"table_id": "I_XXC_MBXSLL_UKZVHZ",
									"columns": ["time", "value"]
								},								
								{
									"table_id": "I_XXC_MBXSLL_66SZ4X",
									"columns": ["time", "value"]
								},
								{
									"table_id": "I_XXC_MBXSLL_V3TRK1",
									"columns": ["time", "value"]
								},
								{
									"table_id": "I_XXC_MBXSLL_ARKS8V",
									"columns": ["time", "value"]
								},
								{
									"table_id": "I_XXC_MBXSLL_68SBRS",
									"columns": ["time", "value"]
								}
							]
						},
						{
							"dataSource_id": "MachineTimeseriesDatabase - Slater",
							"tables": [
								{
									"table_id": "I_CMS_LJ3Z4P_AW8HY7",
									"columns": ["time", "value"]
								},
								{
									"table_id": "I_CMS_LJ3Z4P_FS38ZU",
									"columns": ["time", "value"]
								},								
								{
									"table_id": "I_CMS_LJ3Z4P_UKZVHZ",
									"columns": ["time", "value"]
								},								
								{
									"table_id": "I_CMS_LJ3Z4P_66SZ4X",
									"columns": ["time", "value"]
								},
								{
									"table_id": "I_CMS_LJ3Z4P_V3TRK1",
									"columns": ["time", "value"]
								},
								{
									"table_id": "I_CMS_LJ3Z4P_ARKS8V",
									"columns": ["time", "value"]
								},
								{
									"table_id": "I_CMS_LJ3Z4P_68SBRS",
									"columns": ["time", "value"]
								}
							]
						},
						{
							"dataSource_id": "MachineTimeseriesDatabase - Zack",
							"tables": [
								{
									"table_id": "I_CMX_LQLS26_AW8HY7",
									"columns": ["time", "value"]
								},
								{
									"table_id": "I_CMX_LQLS26_FS38ZU",
									"columns": ["time", "value"]
								},								
								{
									"table_id": "I_CMX_LQLS26_UKZVHZ",
									"columns": ["time", "value"]
								},								
								{
									"table_id": "I_CMX_LQLS26_66SZ4X",
									"columns": ["time", "value"]
								},
								{
									"table_id": "I_CMX_LQLS26_V3TRK1",
									"columns": ["time", "value"]
								},
								{
									"table_id": "I_CMX_LQLS26_ARKS8V",
									"columns": ["time", "value"]
								},
								{
									"table_id": "I_CMX_LQLS26_68SBRS",
									"columns": ["time", "value"]
								}
							]
						}
					]
				}
			]
		},
		"Flow": {},
		"DAL_Images": {
			"streaming-api": {
				"internalPort": 40001,
				"externalPort": 40001,
				"image": "153.92.30.56:5050/streaming-dal:latest"
			}
		},
		"VDC_Images": {
			"caf": {
				"internalPort": 1888,
				"externalPort": 1888,
				"image": "153.92.30.56:5050/computation-vdc:latest"
			}
		},
		"Identity_Access_Management": {
			"jwks_uri": "",
			"iam_endpoint": ""
		},
		"Testing_Output_Data": [
			{
				"method_id": "GetStreamingData",
				"zip_data": "TO-DO URL to a zip file with data samples"
			},
			{
				"method_id": "GetSimplifiedDiagnostic",
				"zip_data": "TO-DO URL to a zip file with data samples"
			},
			{
				"method_id": "GetFullDiagnostic",
				"zip_data": "TO-DO URL to a zip file with data samples"
			}
		]		
	},	
	"DATA_MANAGEMENT": [
		{
			"method_id":"GetStreamingData",
			"attributes":
            {
                "dataUtility": 
                [
                    {
                        "id": "availability_9099",
                        "description":"Availability 90-99",
                        "type":"Availability",
						"properties": 
						{
							"availability": 
							{
								"unit": "percentage",
								"minimum":90,
								"maximum":99
							}				
						}						
                    },
                    {
                        "id": "processCompleteness_80",
                        "description": "Process completeness 80",
                        "type": "Process completeness",
                        "properties": 
						{
							"completeness": 
							{
								"minimum":80,
								"unit": "percentage"
							}
						}
                    },
                    {
                        "id": "timeliness_065",
                        "description": "Timeliness 0.65",
                        "type": "Timeliness",
						"properties": 
						{
							"timeliness": 
							{
								"maximum":0.65,
								"unit": "none"
							}
						}
                    },
                    {
                        "id": "precision_08",
                        "description": "Precision 0.8",
                        "type": "Precision",
                        "properties": 
						{
							"precision": 
							{
								"minimum":0.8,
								"unit": "none"
							}
						}
                    },
                    {
                        "id": "accuracy_09",
                        "description": "Accuracy 0.9",
                        "type": "Accuracy",
                        "properties": 
						{
							"accuracy": 
							{
								"minimum":0.9,
								"unit": "none"
							}
						}
                    }
                ],
                "security": [],
                "privacy": []
            }
		},
				{
			"method_id": "GetSimplifiedDiagnostic",
			"attributes":
            {
                "dataUtility": 
                [
                    {
                        "id": "availability_9099",
                        "description":"Availability 90-99",
                        "type":"Availability",
						"properties": 
						{
							"availability": 
							{
								"unit": "percentage",
								"minimum":90,
								"maximum":99
							}				
						}						
                    },
                    {
                        "id": "processCompleteness_80",
                        "description": "Process completeness 80",
                        "type": "Process completeness",
                        "properties": 
						{
							"completeness": 
							{
								"minimum":80,
								"unit": "percentage"
							}
						}
                    },
                    {
                        "id": "timeliness_065",
                        "description": "Timeliness 0.65",
                        "type": "Timeliness",
						"properties": 
						{
							"timeliness": 
							{
								"maximum":0.65,
								"unit": "none"
							}
						}
                    },
                    {
                        "id": "precision_08",
                        "description": "Precision 0.8",
                        "type": "Precision",
                        "properties": 
						{
							"precision": 
							{
								"minimum":0.8,
								"unit": "none"
							}
						}
                    },
                    {
                        "id": "accuracy_09",
                        "description": "Accuracy 0.9",
                        "type": "Accuracy",
                        "properties": 
						{
							"accuracy": 
							{
								"minimum":0.9,
								"unit": "none"
							}
						}
                    }
                ],
                "security": [],
                "privacy": []
            }
		},
		{
			"method_id": "GetFullDiagnostic",
			"attributes":
            {
                "dataUtility": 
                [
                    {
                        "id": "availability_9099",
                        "description":"Availability 90-99",
                        "type":"Availability",
						"properties": 
						{
							"availability": 
							{
								"unit": "percentage",
								"minimum":90,
								"maximum":99
							}				
						}						
                    },
                    {
                        "id": "processCompleteness_80",
                        "description": "Process completeness 80",
                        "type": "Process completeness",
                        "properties": 
						{
							"completeness": 
							{
								"minimum":80,
								"unit": "percentage"
							}
						}
                    },
                    {
                        "id": "timeliness_065",
                        "description": "Timeliness 0.65",
                        "type": "Timeliness",
						"properties": 
						{
							"timeliness": 
							{
								"maximum":0.65,
								"unit": "none"
							}
						}
                    },
                    {
                        "id": "precision_08",
                        "description": "Precision 0.8",
                        "type": "Precision",
                        "properties": 
						{
							"precision": 
							{
								"minimum":0.8,
								"unit": "none"
							}
						}
                    },
                    {
                        "id": "accuracy_09",
                        "description": "Accuracy 0.9",
                        "type": "Accuracy",
                        "properties": 
						{
							"accuracy": 
							{
								"minimum":0.9,
								"unit": "none"
							}
						}
                    }
                ],
                "security": [],
                "privacy": []
            }
		}
	],	
	"ABSTRACT_PROPERTIES": {
	
	},	
	"COOKBOOK_APPENDIX": {
		
	},	
	"EXPOSED_API": {
		"openapi": "3.0.0",
		"info": {
			"title": "Computation blueprints for SPART MANUFACTURING plant (IDEKO use case)",
			"description": "Computations blueprints able to get data from the 3 ESTARTA 315 FV machines working on the SPART MANUFATURING plant. Expose 3 methods.",
			"version": "0.0.1"
		},
		"paths": {
			"/GetStreamingData": {
				"get": {
					"summary": "Returns the streaming data for the parameters given. MachinesIds can be a comma-separated list of machines.",
					"operationId": "GetStreamingData",
					"parameters": [
						{
							"in": "query",
							"name": "machines",
							"required": true,
							"schema": {
								"type": "string"
							}
						}
					],
					"responses": {
						"200": {
							"description": "OK",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/GetStreamingDataResponse"
									}
								},
								"application/octet-stream": {
									"schema": {
										"type": "string",
										"format": "binary"
									}
								}
							}
						},
						"default": {
							"description": "Unexpected error",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/ErrorResponse"
									}
								}
							}
						}
					},
					"x-data-sources": [
						"Streaming API"
					]
				}
			},
			"/GetSimplifiedDiagnostic": {
				"get": {
					"summary": "Returns a simplified view of the state of the machines in the plant. A list of comma separated machine ids can be passed.",
					"operationId": "GetSimplifiedDiagnostic",
					"parameters": [
						{
							"in": "query",
							"name": "machines",
							"required": true,
							"schema": {
								"type": "string"
							}
						}
					],
					"responses": {
						"200": {
							"description": "OK",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/GetSimplifiedDiagnostic"
									}
								}
							}
						}
					},
					"x-data-sources": [
						"InfluxDB"
					]
				}
			},
			"/GetFullDiagnostic": {
				"get": {
					"summary": "Returns a complete view of the states of the machines in the plant. A list of comma separated machine ids can be passed.",
					"operationId": "GetFullDiagnostic",
					"parameters": [
						{
							"in": "query",
							"name": "machines",
							"required": true,
							"schema": {
								"type": "string"
							}
						}
					],
					"responses": {
						"200": {
							"description": "OK",
							"content": {
								"application/json": {
									"schema": {
										"$ref": "#/components/schemas/GetFullDiagnostic"
									}
								}
							}
						}
					},
					"x-data-sources": [
						"InfluxDB"
					]
				}
			}
		},
		"components": {
			"schemas": {
				"ErrorResponse": {
					"type": "object",
					"properties": {
						"status": {
							"type": "integer"
						},
						"code": {
							"type": "integer"
						},
						"message": {
							"type": "string"
						},
						"link": {
							"type": "string"
						},
						"developerMessage": {
							"type": "string"
						}
					}
				},
				"GetStreamingDataResponse": {
					"type": "object",
					"properties": {
						"machine": {
							"type": "string"
						},
						"group": {
							"type": "string"
						},
						"data": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"additionalProperties": {
										"type": "integer"
									},
									"timestamp": {
										"type": "object"
									}
								}
							}
						}
					}
				},
				"GetSimplifiedDiagnostic": {
					"type": "object",
					"properties": {
						"status": {
							"type": "string",
							"enum": [
								"OK",
								"ALERT",
								"WARNING"
							]
						},
						"timestamp": {
							"type": "number",
							"example": 1550584972266
						},
						"cause": {
							"type": "object",
							"properties": {
								"raw": {
									"type": "string"
								},
								"metric": {
									"type": "string"
								},
								"value": {
									"type": "number"
								},
								"unit": {
									"type": "string"
								}
							}
						}
					}
				},
				"GetFullDiagnostic": {
					"type": "object",
					"properties": {
						"status": {
							"type": "string",
							"enum": [
								"OK",
								"ALERT",
								"WARNING"
							]
						},
						"timestamp": {
							"type": "number",
							"example": 1550584972266
						},
						"cause": {
							"type": "object",
							"properties": {
								"raw": {
									"type": "string"
								},
								"metric": {
									"type": "string"
								},
								"value": {
									"type": "number"
								},
								"unit": {
									"type": "string"
								}
							}
						},
						"signals": {
							"type": "object",
							"properties": {
								"additionalProperties": {
									"type": "array",
									"items": {
										"type": "array",
										"items": {
											"type": "number"
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}